{
    "pipes": [
        {
            "name": "SafeHtmlPipe",
            "id": "pipe-SafeHtmlPipe-b119c452d112bba7ff31f776680590bb6154edbf4dbeacdd92d2830d1970f0f1beb6ae06fe87745a90e236109b859382f9478e177de622b676e5c42ad3519d98",
            "file": "src/app/safe-html.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SafeHtml",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "safeHtml",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n\n"
        }
    ],
    "interfaces": [
        {
            "name": "InputData",
            "id": "interface-InputData-f75d2a28a562b5494e8600d753c2e8f0ee73aa4fcbff46a35bc684f2135fe8a3971841c81ca8e6515c72b3306b82b57e0966c1edbebf66856c090cbe417a3291",
            "file": "src/app/interfaces/interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Language {\n\n  id: number,\n  language: string,\n  logo: string\n}\n\n\ninterface Solution {\n\n  id: number\n  language_id: number,\n  code: string,\n  year: number,\n  day: number\n\n}\n\ninterface InputData {\n\n  data: string,\n  year: number,\n  day: number,\n  title: string\n}\n\nexport {Language, Solution, InputData}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Language",
            "id": "interface-Language-f75d2a28a562b5494e8600d753c2e8f0ee73aa4fcbff46a35bc684f2135fe8a3971841c81ca8e6515c72b3306b82b57e0966c1edbebf66856c090cbe417a3291",
            "file": "src/app/interfaces/interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Language {\n\n  id: number,\n  language: string,\n  logo: string\n}\n\n\ninterface Solution {\n\n  id: number\n  language_id: number,\n  code: string,\n  year: number,\n  day: number\n\n}\n\ninterface InputData {\n\n  data: string,\n  year: number,\n  day: number,\n  title: string\n}\n\nexport {Language, Solution, InputData}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "logo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Solution",
            "id": "interface-Solution-f75d2a28a562b5494e8600d753c2e8f0ee73aa4fcbff46a35bc684f2135fe8a3971841c81ca8e6515c72b3306b82b57e0966c1edbebf66856c090cbe417a3291",
            "file": "src/app/interfaces/interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Language {\n\n  id: number,\n  language: string,\n  logo: string\n}\n\n\ninterface Solution {\n\n  id: number\n  language_id: number,\n  code: string,\n  year: number,\n  day: number\n\n}\n\ninterface InputData {\n\n  data: string,\n  year: number,\n  day: number,\n  title: string\n}\n\nexport {Language, Solution, InputData}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "language_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tag",
            "id": "interface-Tag-196357307531b3e735329562ac2e31313ecba33aaf3c7103b6b2c58e6a84e0de0e207e976914cf2643830f155c3455eb164c9dcdadfba8ed5a945f7a97fd4b80",
            "file": "src/app/models/tag.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tag {\n  id: number;\n  title: string;\n  src?: string | undefined;\n  selected: true | false;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | ",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f0e95aa6c2e4efbfc6cb6c76581980e908488f6f3fcfecf72cfa04c6a289ca038614334f1fd36822dc67a1230f64da04a1c80d0d0b1223a7660ce16ee012ecc8",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'visualization'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'visualization';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<app-nav />\n\n<h1\n    class=\"bg-gradient-to-l from-teal-500 via-purple-500 to-orange-500 bg-clip-text text-transparent text-5xl font-black animate-shine-animation text-center\">\n    <strong>My</strong> Advent of Code\n</h1>\n<app-home />\n<app-footer />"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-d8809c748f48ba2711f59820f89820b07f1bdf0a09d2001752b415d2ed9cdc9d511c270748be5487f74f7e1b551f1b7e8bc73623f2c5c51c4f8b130c48868532",
            "file": "src/app/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "cardContents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Array<CardContent>",
                    "decorators": []
                },
                {
                    "name": "day",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "languages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "logos",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "recentYear",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "adventDay",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NumericRange<1, 24>[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedLanguage",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<CardContent>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "solutions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "year",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "changeSolution",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from \"@angular/core\";\nimport { NumericRange, CardContent } from \"../types\";\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.scss\"],\n})\nexport class CardComponent implements OnInit {\n  @Input() day: number = 0;\n  @Input() recentYear: number = 0;\n  @Input() languages: string[] = [];\n  @Input() logos: string[] = [];\n  @Input() cardContents: Array<CardContent> = [];\n  @Input() title: string = \"\";\n\n  selectedLanguage: Partial<CardContent> = {};\n  adventDay: NumericRange<1, 24>[] = [];\n  year: number = 0;\n  solutions: String[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.year = this.recentYear;\n    this.solutions = [];\n    this.logos = this.logos.map((logo) => svgSize(logo, 24));\n    this.selectedLanguage = this.cardContents[0];\n    //TODO: Solve issue of why single languages doesn't highlight correctly\n    this.languages = [\"python\", \"javascript\", \"typescript\", \"c\"];\n  }\n\n  changeSolution(event: Event) {\n    const clickedSolution = event.currentTarget as HTMLElement;\n    const clickedSolutionID = clickedSolution.getAttribute(\"id\")?.split(\"-\")[1];\n\n    if (clickedSolutionID) {\n      this.selectedLanguage = this.cardContents[Number(clickedSolutionID)];\n    }\n  }\n}\n\nfunction svgSize(svg: string, size: number) {\n  svg = svg.replace(\n    /width=\"\\d+px\"|height=\"\\d+px\"/g,\n    `width=\"${size}px\" height=\"${size}px\"`\n  );\n  return svg;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"flex flex-col border-8 border-red-100 gap-4 w-80 h-full\">\n  <h2 class=\"justify-center w-full flex ms-3 font-bold\">{{ title }} </h2>\n  <hr />\n  <app-code [code]='selectedLanguage?.code || \"\" ' [languages]=languages [lineNumbers]=true />\n\n  <ol class=\"flex justify-evenly border-2 border-red-300\">\n    <li *ngFor=\"let logo of logos; let i = index\" [attr.id]=\"'language-' + i\" class=\"inline-block cursor-pointer\"\n      (click)=\"changeSolution($event)\">\n      <svg [innerHTML]=\"logo | safeHtml\" width=\"24\" height=\"24\"></svg>\n    </li>\n  </ol>\n</section>"
        },
        {
            "name": "CodeComponent",
            "id": "component-CodeComponent-5d3a0d1a23e4a8fb49737892e8ccf8574c06ee8e5bc982601e10c0cbc533cf5c39cca6bb68b87ec212200adde8898074cc4ac41c3c076d3d107d2b11b65be313",
            "file": "src/app/code/code.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-code",
            "styleUrls": [
                "./code.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "languages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "lineNumbers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HighlightModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n} from \"@angular/core\";\nimport { HighlightModule } from \"ngx-highlightjs\";\n\n@Component({\n  selector: \"app-code\",\n  templateUrl: \"./code.component.html\",\n  styleUrls: [\"./code.component.scss\"],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, HighlightModule],\n})\nexport class CodeComponent implements OnInit {\n  @Input() code!: string;\n  @Input() languages!: string[];\n  @Input() lineNumbers!: boolean;\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./code.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<pre><code [highlight]=\"code\" [languages]=\"languages\" [lineNumbers]=\"lineNumbers\"></code></pre>\n"
        },
        {
            "name": "FieldsetComponent",
            "id": "component-FieldsetComponent-b146d3961e671dd5283aa4f166abb200ee36fb473f26d3f394099da7d37466735d6d6f2f6edb9293ea447a4e916b885de4309b1189b92036ce732673bdec4d77",
            "file": "src/app/components/FieldsetComponent.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fieldset",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fieldset.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "availableTags",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Tag[]",
                    "decorators": []
                },
                {
                    "name": "fieldsetType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"languages\" | \"algorithm\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedTagsOutput",
                    "defaultValue": "new EventEmitter<\n    string[]\n  >()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<string[]>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "tagComponents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TagComponent>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "TagComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleTagSelection",
                    "args": [
                        {
                            "name": "tag",
                            "type": "Tag",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tag",
                            "type": "Tag",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Output,\n  Input,\n  EventEmitter,\n  AfterViewInit,\n  ViewChildren,\n  QueryList,\n} from \"@angular/core\";\nimport { Tag } from \"../models/tag.model\";\nimport TagComponent from \"./TagComponent\";\n\n@Component({\n  selector: \"app-fieldset\",\n  templateUrl: \"./fieldset.component.html\",\n})\nexport default class FieldsetComponent implements AfterViewInit {\n  @Output() selectedTagsOutput: EventEmitter<string[]> = new EventEmitter<\n    string[]\n  >();\n\n  @Input() availableTags: Tag[] = [];\n\n  @Input() fieldsetType?: \"languages\" | \"algorithm\";\n\n  @ViewChildren(TagComponent) tagComponents!: QueryList<TagComponent>;\n\n  handleTagSelection(tag: Tag): void {\n    if (tag.selected) this.availableTags.push(tag);\n    const index = this.availableTags.findIndex(\n      (availableTag) => (availableTag.id = tag.id)\n    );\n    if (index !== -1) this.availableTags.splice(index, 1);\n  }\n\n  ngAfterViewInit(): void {\n    this.tagComponents.forEach((tagComponent) => {\n      const nativeCheckbox = tagComponent.tagCheckbox.nativeElement;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<fieldset class=\"border-2 border-yellow-200 border-solid  p-4 flex flex-wrap gap-5\">\n    <legend>{{fieldsetType?.toUpperCase()}}</legend>\n    <ng-container *ngFor=\"let tag of availableTags\">\n        <app-tag [tag]=\"tag\" class=\"basis-1/3\"></app-tag>\n    </ng-container>\n</fieldset>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-d27a8f1f2904856366cc193ee86dcf83e31c2f1dd0f440c4a6151bd786d875a273f07efc7421bd91d7cd17b365f0c5cba8b91a8cba805044706f62b87596602b",
            "file": "src/app/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<footer>\n    <section>\n        <ol>\n            <li></li>\n        </ol>\n    </section>\n    <section>\n        <ol>\n            <li></li>\n        </ol>\n    </section>\n</footer>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-b46e4066567db8cadd3636f7419850b56f92e08756634f77e9ad67cdf86bf388053986125aa5d5b5b56083f1df3a8410174f04076b87d3450d5af2f5e28e37c2",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "availableSolutions",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AvailableSolutions",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "cardContents",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CardContents",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "cards",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "initialCards",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "inputData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "languages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selectedYear",
                    "defaultValue": "recentYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "year",
                    "defaultValue": "recentYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NumericRange<2015 | >",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "getNumberOfSolutions",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "recentYear"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "recentYear",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadData",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchChallenge",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setYear",
                    "args": [
                        {
                            "name": "selectedYear",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedYear",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Language, Solution, InputData } from \"../interfaces/interface\";\nimport { NumericRange, CardContents, AvailableSolutions } from \"../types\";\nimport { Observable, debounceTime, forkJoin } from \"rxjs\";\n\ntype searchFormShape<T> = {\n  [K in keyof T]: T[K] | undefined;\n};\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n})\nexport class HomeComponent implements OnInit {\n  selectedYear: number = recentYear;\n  isLoading: boolean = true;\n  cards: number[] = [];\n  initialCards: number[] = [];\n  languages: string[] = [];\n  year: NumericRange<2015, typeof recentYear> = recentYear;\n  cardContents: CardContents = {};\n  availableSolutions: AvailableSolutions = {};\n  inputData: { [day: number]: string } = {};\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.loadData(recentYear);\n  }\n\n  getNumberOfSolutions(\n    year: number = recentYear\n  ): Observable<[Language[], Solution[], InputData[]]> {\n    const credentials = btoa(\"foo:bar\");\n    const headers = new HttpHeaders().set(\n      \"Authorization\",\n      `Basic ${credentials}`\n    );\n    const params = new HttpParams().set(\"year\", year);\n\n    const languages$ = this.http.get<Language[]>(\n      `http://localhost:8000/solutions_logos`,\n      { headers, params }\n    );\n    const solutions$ = this.http.get<Solution[]>(\n      `http://localhost:8000/solutions`,\n      { headers, params }\n    );\n\n    const inputData$ = this.http.get<InputData[]>(\n      `http://localhost:8000/inputs`,\n      { headers, params }\n    );\n\n    return forkJoin([languages$, solutions$, inputData$]);\n  }\n\n  loadData(year: number): void {\n    this.availableSolutions = {};\n    this.cardContents = {};\n    this.inputData = {};\n    this.isLoading = true;\n\n    this.getNumberOfSolutions(year)\n      .pipe(debounceTime(1000))\n      .subscribe({\n        next: ([languages, solutions, inputs]) => {\n          this.cards = Array.from(\n            new Set(solutions.map((solution) => solution.day))\n          ).sort((a, b) => a - b);\n\n          inputs\n            .map((input) => ({ [input.day]: input.title.split(\"---\")[1] }))\n            .forEach((obj) => {\n              const key = Object.keys(obj)[0];\n              this.inputData[Number(key)] = Object.values(obj)[0];\n            });\n\n          solutions.sort((a, b) => a.language_id - b.language_id);\n\n          for (const { day, language_id, code } of solutions) {\n            for (const { id, language, logo } of languages) {\n              if (id === language_id) {\n                let cardContent: CardContents[number] extends Array<infer U>\n                  ? U\n                  : never = { code: code, language: language, language_id };\n                if (this.cardContents[day] === undefined) {\n                  this.cardContents[day] = [cardContent];\n                  this.availableSolutions[day] = [logo];\n                } else {\n                  this.cardContents[day].push(cardContent);\n                  this.availableSolutions[day].push(logo);\n                }\n              }\n            }\n          }\n          this.isLoading = false;\n          this.initialCards = [...this.cards];\n          console.log(this.cardContents);\n        },\n        error: (err: any) => {\n          console.log(err);\n        },\n      });\n  }\n\n  searchChallenge(searchTerm: string) {\n    if (!searchTerm) this.cards = this.initialCards;\n\n    const matchingChallenges: Array<number> = Object.keys(this.inputData)\n      .map((key) => Number(key))\n      .filter((key) => this.inputData[key].toLowerCase().includes(searchTerm));\n\n    this.cards = matchingChallenges;\n  }\n\n  setYear(selectedYear: number) {\n    this.selectedYear = selectedYear;\n    this.loadData(selectedYear);\n  }\n}\n\nconst recentYear: number = new Date().getFullYear() - 2;\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<main class=\"flex justify-center flex-wrap\">\n  <header class=\"w-full\">\n    <h2 class=\"m-auto block w-fit underline text-4xl \">{{ selectedYear }}</h2>\n  </header>\n  <section class=\"basis-full flex justify-center gap-5 mt-5\">\n    <app-search class=\"justify-center flex\" (searchTermChange)=\"searchChallenge($event)\" />\n    <app-year-selector class=\"self-center\" (selectedYear)=\"setYear($event)\" />\n  </section>\n  <ng-container *ngIf=\"!isLoading; else loadingBlock\">\n    <ng-container *ngIf=\"cards.length > 0 else elseBlock\">\n      <section class=\"mt-10\" *ngFor=\"let day of cards\">\n        <ng-container *ngIf=\"cardContents[day].length > 0 && cardContents[day][0] !== undefined; else elseBlock\">\n          <app-card [day]=\"day\" [recentYear]=\"selectedYear\" [languages]=\"languages\" [logos]=\"availableSolutions[day]\"\n            [title]=\"inputData[day]\" [cardContents]=\"cardContents[day]\" />\n        </ng-container>\n      </section>\n    </ng-container>\n    <ng-template #elseBlock>\n      <div class=\"mt-15\">This year no challenges were done :( </div>\n    </ng-template>\n  </ng-container>\n  <ng-template #loadingBlock>\n    <app-placeholder />\n  </ng-template>\n</main>"
        },
        {
            "name": "NavComponent",
            "id": "component-NavComponent-7f4fc2afa7b239b88ce07c4d0a52a07eb4be2e850ca610136eb26d931fa91f6a7c02395e76010fbf9da59c1579052b3e2ac3e9aac12f01146db98bb851025f4a",
            "file": "src/app/nav/nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav",
            "styleUrls": [
                "./nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./nav.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<nav>\n  <ol class=\"flex gap-10 justify-end\">\n    <li>LATEST</li>\n    <li>SEARCH</li>\n    <li>YEAR</li>\n  </ol>\n</nav>\n"
        },
        {
            "name": "PlaceholderComponent",
            "id": "component-PlaceholderComponent-03b8ffbac3ac2f9b66bb323573ef9db1deec9b7936c88e00d1c9037de9746e7480975394a8794a23ed3644c97b0f56d0a760d24925742e58e0db9b1f5e4c257b",
            "file": "src/app/placeholder/placeholder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-placeholder",
            "styleUrls": [
                "./placeholder.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./placeholder.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-placeholder\",\n  templateUrl: \"./placeholder.component.html\",\n  styleUrls: [\"./placeholder.component.scss\"],\n})\nexport class PlaceholderComponent {\n  //TODO\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./placeholder.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"wrapper flex gap-6 mt-20\">\n    <section\n        class=\"m-auto before:content-[''] relative min-h-[400px] w-[240px] before:animate-placeholder-shimmer-animation before:bg-gradient-to-r from-transparent via-white to-transparent before:absolute before:w-full before:h-full before:z-10 overflow-hidden mt-1\">\n        <div class=\"faux-summary\">\n            <div class=\"faux-code bg-gray-300 h-4 rounded mb-1 w-12/12\"></div>\n            <hr class=\"border-t-2 border-gray-300 mb-1\">\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-10/12\"></div>\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-8/12\"></div>\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-9/12\"></div>\n        </div>\n        <div class=\"faux-code bg-gray-300 h-4 rounded mb-1 w-12/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-10/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-8/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-9/12\"></div>\n        <div class=\"faux-image-wrapper\">\n            <div class=\"faux-image\">\n            </div>\n        </div>\n        <ul class=\"faux-languages\">\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n        </ul>\n    </section>\n\n    <section\n        class=\"m-auto before:content-[''] relative min-h-[400px] w-[240px] before:animate-placeholder-shimmer-animation before:bg-gradient-to-r from-transparent via-white to-transparent before:absolute before:w-full before:h-full before:z-10 overflow-hidden mt-1\">\n        <div class=\"faux-summary\">\n            <div class=\"faux-code bg-gray-300 h-4 rounded mb-1 w-12/12\"></div>\n            <hr class=\"border-t-2 border-gray-300 mb-1\">\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-10/12\"></div>\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-8/12\"></div>\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-9/12\"></div>\n        </div>\n        <div class=\"faux-code bg-gray-300 h-4 rounded mb-1 w-12/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-10/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-8/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-9/12\"></div>\n        <div class=\"faux-image-wrapper\">\n            <div class=\"faux-image\">\n            </div>\n        </div>\n        <ul class=\"faux-languages\">\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n        </ul>\n    </section>\n    <section\n        class=\"m-auto before:content-[''] relative min-h-[400px] w-[240px] before:animate-placeholder-shimmer-animation before:bg-gradient-to-r from-transparent via-white to-transparent before:absolute before:w-full before:h-full before:z-10 overflow-hidden mt-1\">\n        <div class=\"faux-summary\">\n            <div class=\"faux-code bg-gray-300 h-4 rounded mb-1 w-12/12\"></div>\n            <hr class=\"border-t-2 border-gray-300 mb-1\">\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-10/12\"></div>\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-8/12\"></div>\n            <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-9/12\"></div>\n        </div>\n        <div class=\"faux-code bg-gray-300 h-4 rounded mb-1 w-12/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-10/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-8/12\"></div>\n        <div class=\"faux-code-short bg-gray-300 h-4 rounded mb-1 w-9/12\"></div>\n        <div class=\"faux-image-wrapper\">\n            <div class=\"faux-image\">\n            </div>\n        </div>\n        <ul class=\"faux-languages\">\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n            <div class=\"faux-image-wrapper\">\n                <div class=\"faux-image\">\n                </div>\n            </div>\n        </ul>\n    </section>\n</div>"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-428b5849923e67bc2108dc0714404e33c400500f47ae8c787a1692ee8a488dba686f9678a625c417abb368fa01567f2330da634ee2d8f3f4719b03de013fb7bf",
            "file": "src/app/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "searchTermChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "searchTerm",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "searchTermSubscribtion",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInputChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, OnDestroy } from \"@angular/core\";\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  of,\n} from \"rxjs\";\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.scss\"],\n})\nexport class SearchComponent implements OnDestroy {\n  @Output() searchTermChange: EventEmitter<string> = new EventEmitter<string>();\n  searchTermSubscribtion: Subscription = new Subscription();\n  searchTerm: string = \"\";\n\n  onInputChange(): void {\n    const searchTerm$ = of(this.searchTerm);\n\n    this.searchTermSubscribtion = searchTerm$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        map((term) => term.toLocaleLowerCase()),\n        filter((term) => term.length > 3 || term.length === 0)\n      )\n      .subscribe((term) => this.searchTermChange.emit(term));\n  }\n\n  ngOnDestroy(): void {\n    this.searchTermSubscribtion.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<label for=\"searchTerm\" class=\"mr-5 self-center\">Search Challenge</label>\n<input type=\"text\" name=\"searchTerm\" id=\"searchTerm\"\n    class=\"border-solid border-2 border-green-700 rounded-md basis-2/12 mb-2 p-2\" [(ngModel)]=\"searchTerm\"\n    (input)=\"onInputChange()\" placeholder=\" Day, Challenge\">"
        },
        {
            "name": "TagComponent",
            "id": "component-TagComponent-35ac388253b035c087d3ea228bbb5c715180e2bb2df2e75fffb54df7aa62b528f60e57719de2583ad5baeae8f67e29e5067e3c29ede137c8af9c4262a443cc1e",
            "file": "src/app/components/TagComponent.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tag",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tag.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Tag",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isChecked",
                    "defaultValue": "this.tag?.selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "tagCheckbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tagCheckbox'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from \"@angular/core\";\nimport { Tag } from \"../models/tag.model\";\n\n@Component({\n  selector: \"app-tag\",\n  templateUrl: \"./tag.component.html\",\n})\nexport default class TagComponent implements AfterViewInit {\n  @Input() tag?: Tag;\n\n  @Output()\n  selected = new EventEmitter<Boolean>();\n\n  @ViewChild(\"tagCheckbox\") tagCheckbox!: ElementRef;\n\n  isChecked: boolean | undefined = this.tag?.selected;\n\n  toggleSelection() {\n    this.isChecked = !this.isChecked;\n  }\n\n  ngAfterViewInit(): void {\n    this.isChecked = this.tagCheckbox.nativeElement.checked;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<label *ngIf=\"tag\" for=\"{{tag?.id}}\" attr.data-isChecked=\"{{isChecked}}\" (click)=\"toggleSelection()\"\n    class=\"flex w-1/12 bg-gray-800 text-white rounded-md p-3 cursor-pointer data-[isChecked=true]:text-gray-800 data-[isChecked=true]:bg-gray-200\">\n    <img [src]=\"tag?.src\" [alt]=\"tag?.title\" />\n</label>\n<input type=\"checkbox\" id=\"{{tag?.id}}\" #tagCheckbox class=\"hidden\">"
        },
        {
            "name": "TaskComponent",
            "id": "component-TaskComponent-c9e7d107d2af9b5c544ed7fbe0aa30466567573401a5c6347de0b192d467dbdeb015ec08f27011712890efff0f8fa362f2acea67a140257ade7f816cc630f77e",
            "file": "src/app/components/TaskComponent.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./task.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe shape of the task object\n",
                    "description": "<p>The shape of the task object</p>\n",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n  selector: \"app-task\",\n  templateUrl: \"./task.component.html\",\n})\nexport default class TaskComponent {\n  /**\n   * The shape of the task object\n   */\n  @Input() task: any;\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onPinTask = new EventEmitter<Event>();\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onArchiveTask = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"dark:rounded-md dark:text-blue-500\">\n    <label [attr.aria-label]=\"task.title + ''\" for=\"title\">\n        <input type=\"text\" [value]=\"task.title\" readonly=\"true\" id=\"title\" name=\"title\" class=\"dark:p-7\" />\n    </label>\n    <input type=\"text\" placeholder=\"Heo\" class=\"p-10 rounded-md\" />\n</div>"
        },
        {
            "name": "YearSelectorComponent",
            "id": "component-YearSelectorComponent-4297d321e4bc9903bb0d931da477894e2caa2362dfb88bbc0a3749a0ace6ea0ba45f26ed4b5ee955c8b5abb02b2e6d5f0f967f5c3c7efc945a1caee4b29d47ab",
            "file": "src/app/year-selector/year-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-year-selector",
            "styleUrls": [
                "./year-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./year-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "selectedYear",
                    "defaultValue": "new EventEmitter<NumericRange<2015, typeof recentYear>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<NumericRange<2015, >>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "availableYears",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "year",
                    "defaultValue": "recentYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectYear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, OnInit } from \"@angular/core\";\nimport { NumericRange } from \"../types\";\n\n@Component({\n  selector: \"app-year-selector\",\n  templateUrl: \"./year-selector.component.html\",\n  styleUrls: [\"./year-selector.component.scss\"],\n})\nexport class YearSelectorComponent implements OnInit {\n  @Output() selectedYear: EventEmitter<NumericRange<2015, typeof recentYear>> =\n    new EventEmitter<NumericRange<2015, typeof recentYear>>();\n\n  year: number = recentYear;\n\n  availableYears: number[] = [];\n  ngOnInit() {\n    const startYear = 2015;\n    this.availableYears = Array(recentYear - startYear + 2)\n      .fill(startYear)\n      .map((year, index) => year + index);\n  }\n\n  selectYear(): void {\n    this.selectedYear.emit(this.year);\n  }\n}\n\nconst recentYear: number = new Date().getFullYear() - 2;\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./year-selector.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<label for=\"year\" class=\"mr-5\">Year</label>\n<select name=\"year\" [(ngModel)]=\"year\" (ngModelChange)=\"selectYear()\">\n    <option *ngFor=\"let year of availableYears\" [value]=\"year\">{{year}}</option>\n</select>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-83906d02f61b841db8d36ad0dd1c49c91bfc9cd8c962501010b157f9b64c613d1f4bec3f7f6b5d937ae29ce1bd24bd1b6e840bd7b06dff75ffb6400e2d823933",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { provideHttpClient, withInterceptorsFromDi } from \"@angular/common/http\";\nimport { BrowserModule } from \"@angular/platform-browser\";\n\nimport { AppComponent } from \"./app.component\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { NavComponent } from \"./nav/nav.component\";\nimport { FooterComponent } from \"./footer/footer.component\";\nimport { CardComponent } from \"./card/card.component\";\nimport { SafeHtmlPipe } from \"./safe-html.pipe\";\nimport { CodeComponent } from \"./code/code.component\";\nimport { HighlightOptions, HIGHLIGHT_OPTIONS } from \"ngx-highlightjs\";\nimport { PlaceholderComponent } from \"./placeholder/placeholder.component\";\nimport { SearchComponent } from \"./search/search.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { YearSelectorComponent } from './year-selector/year-selector.component';\n\n@NgModule({ declarations: [\n        AppComponent,\n        HomeComponent,\n        NavComponent,\n        FooterComponent,\n        CardComponent,\n        SafeHtmlPipe,\n        PlaceholderComponent,\n        SearchComponent,\n        YearSelectorComponent,\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule, CodeComponent, FormsModule], providers: [\n        {\n            provide: HIGHLIGHT_OPTIONS,\n            useValue: <HighlightOptions>{\n                lineNumbers: true,\n                coreLibraryLoader: () => import(\"highlight.js/lib/core\"),\n                lineNumbersLoader: () => import(\"ngx-highlightjs/line-numbers\"),\n                languages: {\n                    typescript: () => import(\"highlight.js/lib/languages/typescript\"),\n                    javascript: () => import(\"highlight.js/lib/languages/javascript\"),\n                    c: () => import(\"highlight.js/lib/languages/c\"),\n                    cpp: () => import(\"highlight.js/lib/languages/cpp\"),\n                    python: () => import(\"highlight.js/lib/languages/python\"),\n                    css: () => import(\"highlight.js/lib/languages/css\"),\n                    xml: () => import(\"highlight.js/lib/languages/xml\"),\n                },\n            },\n        },\n        provideHttpClient(withInterceptorsFromDi()),\n    ] })\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "NavComponent"
                        },
                        {
                            "name": "PlaceholderComponent"
                        },
                        {
                            "name": "SafeHtmlPipe"
                        },
                        {
                            "name": "SearchComponent"
                        },
                        {
                            "name": "YearSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CodeComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FieldsetModule",
            "id": "module-FieldsetModule-f3bdf4b8ac19b1bd9e57d9084a12e758ee8d367b216b498f6b1b9449cca65842c16e7715f2fb6d7e76d4f8a6a591543cf8a316c5b82f9cab10b3afc611c7e5e4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/fieldset.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from \"@angular/common\";\n\nimport FieldsetComponent from \"./FieldsetComponent\";\nimport TagComponent from \"./TagComponent\";\nimport { NgModule } from \"@angular/core\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [TagComponent, FieldsetComponent],\n  declarations: [TagComponent, FieldsetComponent],\n  providers: [],\n})\nexport class FieldsetModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FieldsetComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FieldsetComponent"
                        },
                        {
                            "name": "TagComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onPinTask: action(\"onPinTask\"),\n  onArchiveTask: action(\"onArchiveTask\"),\n}"
            },
            {
                "name": "Archived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    task: {\n      ...Default.args?.task,\n      state: \"TASK_ARCHIVED\",\n    },\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    task: {\n      id: \"1\",\n      title: \"Test Task\",\n      state: \"TASK_INBOX\",\n    },\n  },\n}"
            },
            {
                "name": "DefaultAlgorithms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/fieldset.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    fieldsetType: \"algorithm\",\n    availableTags: [\n      {\n        id: 1,\n        title: `Recursion`.toUpperCase(),\n        src: undefined,\n        selected: false,\n      },\n      {\n        id: 2,\n        title: `Dynamic Programming`.toUpperCase(),\n        src: undefined,\n        selected: false,\n      },\n    ],\n  },\n}"
            },
            {
                "name": "DefaultLanguages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/fieldset.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    fieldsetType: \"languages\",\n    availableTags: [\n      {\n        id: 1,\n        title: \"Haskell\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Haskell-Logo.svg\",\n        selected: false,\n      },\n      {\n        id: 2,\n        title: \"C\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/1/18/C_Programming_Language.svg\",\n        selected: false,\n      },\n    ],\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/fieldset.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FieldsetComponent>",
                "defaultValue": "{\n  component: FieldsetComponent,\n  excludeStories: /.*Data$/,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      declarations: [FieldsetComponent, TagComponent],\n    }),\n  ],\n  render: (args) => {\n    // Initialize the EventEmitter for selectedTagsOutput\n    const selectedTagsOutput = new EventEmitter<string[]>();\n\n    // Handle emitted values if necessary (optional)\n    selectedTagsOutput.subscribe((tags) => {\n      console.log(\"Selected Tags:\", tags);\n    });\n\n    return {\n      props: {\n        selectedTagsOutput,\n        availableTags: args.availableTags,\n        fieldsetType: args.fieldsetType,\n        tagComponents: args.tagComponents,\n      },\n      template: `<app-fieldset ${argsToTemplate(args)}></app-fieldset>`,\n    };\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TagComponent>",
                "defaultValue": "{\n  title: \"Tag\",\n  component: TagComponent,\n  excludeStories: /.*Data$/,\n  tags: [\"autodocs\"],\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `<app-tag ${argsToTemplate(args)}></app-tag>`,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TaskComponent>",
                "defaultValue": "{\n  title: \"Task\",\n  component: TaskComponent,\n  excludeStories: /.*Data$/,\n  tags: [\"autodocs\"],\n  render: (args) => ({\n    props: {\n      ...args,\n      onPinTask: actionsData.onPinTask,\n      onArchiveTask: actionsData.onArchiveTask,\n    },\n    template: `<app-task ${argsToTemplate(args)}></app-task>`,\n  }),\n}"
            },
            {
                "name": "NotSelected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tag: {\n      id: 1,\n      title: \"Haskell\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Haskell-Logo.svg\",\n      selected: false,\n    },\n  },\n}"
            },
            {
                "name": "Pinned",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    task: {\n      ...Default.args?.task,\n      state: \"TASK_PINNED\",\n    },\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    //    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    args: { onClick: fn() },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n\n  decorators: [\n    withThemeByDataAttribute({\n      themes: {\n        // nameOfTheme: 'dataAttributeForTheme',\n        light: \"light\",\n        dark: \"dark\",\n      },\n      defaultTheme: \"light\",\n      attributeName: \"data-mode\",\n    }),\n    withThemeByDataAttribute({\n      themes: {\n        // nameOfTheme: 'dataAttributeForTheme',\n        light: \"\",\n        dark: \"dark\",\n      },\n      defaultTheme: \"light\",\n      attributeName: \"data-theme\",\n    }),\n  ],\n\n  tags: [\"autodocs\"],\n}"
            },
            {
                "name": "recentYear",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/home/home.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "new Date().getFullYear() - 2"
            },
            {
                "name": "recentYear",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/year-selector/year-selector.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "new Date().getFullYear() - 2"
            },
            {
                "name": "Selected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tag: {\n      id: 1,\n      title: \"Haskell\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Haskell-Logo.svg\",\n      selected: true,\n    },\n  },\n}"
            },
            {
                "name": "SelectedAlgorithms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/fieldset.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    fieldsetType: DefaultAlgorithms.args?.fieldsetType,\n    availableTags: DefaultAlgorithms.args?.availableTags?.map((tag) => ({\n      ...tag,\n      selected: true,\n    })),\n  },\n}"
            },
            {
                "name": "SelectedLanguages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/fieldset.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    fieldsetType: DefaultLanguages.args?.fieldsetType,\n    availableTags: DefaultLanguages.args?.availableTags?.map((tag) => ({\n      ...tag,\n      selected: true,\n    })),\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "svgSize",
                "file": "src/app/card/card.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "svg",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "svg",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AvailableSolutions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "CardContent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type | undefined",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "CardContents",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "NumericRange",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "searchFormShape",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/home/home.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FieldsetComponent>",
                "file": "src/app/components/fieldset.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TagComponent>",
                "file": "src/app/components/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TaskComponent>",
                "file": "src/app/components/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/task.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onPinTask: action(\"onPinTask\"),\n  onArchiveTask: action(\"onArchiveTask\"),\n}"
                },
                {
                    "name": "Archived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    task: {\n      ...Default.args?.task,\n      state: \"TASK_ARCHIVED\",\n    },\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    task: {\n      id: \"1\",\n      title: \"Test Task\",\n      state: \"TASK_INBOX\",\n    },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TaskComponent>",
                    "defaultValue": "{\n  title: \"Task\",\n  component: TaskComponent,\n  excludeStories: /.*Data$/,\n  tags: [\"autodocs\"],\n  render: (args) => ({\n    props: {\n      ...args,\n      onPinTask: actionsData.onPinTask,\n      onArchiveTask: actionsData.onArchiveTask,\n    },\n    template: `<app-task ${argsToTemplate(args)}></app-task>`,\n  }),\n}"
                },
                {
                    "name": "Pinned",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    task: {\n      ...Default.args?.task,\n      state: \"TASK_PINNED\",\n    },\n  },\n}"
                }
            ],
            "src/app/components/fieldset.stories.ts": [
                {
                    "name": "DefaultAlgorithms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/fieldset.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    fieldsetType: \"algorithm\",\n    availableTags: [\n      {\n        id: 1,\n        title: `Recursion`.toUpperCase(),\n        src: undefined,\n        selected: false,\n      },\n      {\n        id: 2,\n        title: `Dynamic Programming`.toUpperCase(),\n        src: undefined,\n        selected: false,\n      },\n    ],\n  },\n}"
                },
                {
                    "name": "DefaultLanguages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/fieldset.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    fieldsetType: \"languages\",\n    availableTags: [\n      {\n        id: 1,\n        title: \"Haskell\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Haskell-Logo.svg\",\n        selected: false,\n      },\n      {\n        id: 2,\n        title: \"C\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/1/18/C_Programming_Language.svg\",\n        selected: false,\n      },\n    ],\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/fieldset.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FieldsetComponent>",
                    "defaultValue": "{\n  component: FieldsetComponent,\n  excludeStories: /.*Data$/,\n  tags: [\"autodocs\"],\n  decorators: [\n    moduleMetadata({\n      declarations: [FieldsetComponent, TagComponent],\n    }),\n  ],\n  render: (args) => {\n    // Initialize the EventEmitter for selectedTagsOutput\n    const selectedTagsOutput = new EventEmitter<string[]>();\n\n    // Handle emitted values if necessary (optional)\n    selectedTagsOutput.subscribe((tags) => {\n      console.log(\"Selected Tags:\", tags);\n    });\n\n    return {\n      props: {\n        selectedTagsOutput,\n        availableTags: args.availableTags,\n        fieldsetType: args.fieldsetType,\n        tagComponents: args.tagComponents,\n      },\n      template: `<app-fieldset ${argsToTemplate(args)}></app-fieldset>`,\n    };\n  },\n}"
                },
                {
                    "name": "SelectedAlgorithms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/fieldset.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    fieldsetType: DefaultAlgorithms.args?.fieldsetType,\n    availableTags: DefaultAlgorithms.args?.availableTags?.map((tag) => ({\n      ...tag,\n      selected: true,\n    })),\n  },\n}"
                },
                {
                    "name": "SelectedLanguages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/fieldset.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    fieldsetType: DefaultLanguages.args?.fieldsetType,\n    availableTags: DefaultLanguages.args?.availableTags?.map((tag) => ({\n      ...tag,\n      selected: true,\n    })),\n  },\n}"
                }
            ],
            "src/app/components/tag.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TagComponent>",
                    "defaultValue": "{\n  title: \"Tag\",\n  component: TagComponent,\n  excludeStories: /.*Data$/,\n  tags: [\"autodocs\"],\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `<app-tag ${argsToTemplate(args)}></app-tag>`,\n  }),\n}"
                },
                {
                    "name": "NotSelected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tag: {\n      id: 1,\n      title: \"Haskell\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Haskell-Logo.svg\",\n      selected: false,\n    },\n  },\n}"
                },
                {
                    "name": "Selected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tag: {\n      id: 1,\n      title: \"Haskell\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Haskell-Logo.svg\",\n      selected: true,\n    },\n  },\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    //    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    args: { onClick: fn() },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n\n  decorators: [\n    withThemeByDataAttribute({\n      themes: {\n        // nameOfTheme: 'dataAttributeForTheme',\n        light: \"light\",\n        dark: \"dark\",\n      },\n      defaultTheme: \"light\",\n      attributeName: \"data-mode\",\n    }),\n    withThemeByDataAttribute({\n      themes: {\n        // nameOfTheme: 'dataAttributeForTheme',\n        light: \"\",\n        dark: \"dark\",\n      },\n      defaultTheme: \"light\",\n      attributeName: \"data-theme\",\n    }),\n  ],\n\n  tags: [\"autodocs\"],\n}"
                }
            ],
            "src/app/home/home.component.ts": [
                {
                    "name": "recentYear",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/home/home.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "new Date().getFullYear() - 2"
                }
            ],
            "src/app/year-selector/year-selector.component.ts": [
                {
                    "name": "recentYear",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/year-selector/year-selector.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "new Date().getFullYear() - 2"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/card/card.component.ts": [
                {
                    "name": "svgSize",
                    "file": "src/app/card/card.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "svg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "svg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/types.ts": [
                {
                    "name": "AvailableSolutions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "CardContent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type | undefined",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "CardContents",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "NumericRange",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/home/home.component.ts": [
                {
                    "name": "searchFormShape",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/home/home.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                }
            ],
            "src/app/components/fieldset.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FieldsetComponent>",
                    "file": "src/app/components/fieldset.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/tag.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TagComponent>",
                    "file": "src/app/components/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/task.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TaskComponent>",
                    "file": "src/app/components/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/card/card.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "svgSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/code/code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/FieldsetComponent.ts",
                "type": "component",
                "linktype": "component",
                "name": "FieldsetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/TagComponent.ts",
                "type": "component",
                "linktype": "component",
                "name": "TagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/TaskComponent.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/fieldset.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultAlgorithms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/fieldset.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultLanguages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/fieldset.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/fieldset.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectedAlgorithms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/fieldset.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectedLanguages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotSelected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Archived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pinned",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "recentYear",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Language",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Solution",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/tag.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tag",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/nav/nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/placeholder/placeholder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlaceholderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/safe-html.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SafeHtmlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/year-selector/year-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "YearSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/year-selector/year-selector.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "recentYear",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}